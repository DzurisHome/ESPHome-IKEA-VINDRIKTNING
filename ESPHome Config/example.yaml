#Logger
logger:
  baud_rate: 0

#Device Required
uart:
  rx_pin: #ESP8266 Wemos D1 Mini: D2, ESP32 Wemos D1 Mini: GPIO21, XIAO-ESP32-C3: GPIO6, ESP32 C3 Supermini: GPIO8
  baud_rate: 9600

#Device
binary_sensor: #If you don't have or want FAN, Delete (binary_sensor and below that)
  - platform: gpio
    pin:
      number: #ESP8266 Wemos D1 Mini: D4, ESP32 Wemos D1 Mini: GPIO16, XIAO-ESP32-C3: GPIO9, ESP32 C3 Supermini: GPIO3
      inverted: true
    name: "IKEA VINDRIKTNING Fan"
    entity_category: "diagnostic"

sensor:
  - platform: pm1006
    pm_2_5:
      id: pm2_5
      name: "IKEA VINDRIKTNING PM2.5"
      filters: #If you don't want Filters, Delete (filters and below that)
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10
            send_first_at: 1

#Diagnostic
text_sensor:
  - platform: template
    update_interval: 1s
    name: "IKEA VINDRIKTNING Color"
    icon: mdi:led-strip
    entity_category: "diagnostic"
    lambda: |-
      static std::string last_value = "";
      std::string new_value;

      if (id(pm2_5).state <= 35.0) {
        new_value = "Green";
      } else if (id(pm2_5).state > 35.0 && id(pm2_5).state <= 85.0) {
        new_value = "Orange";
      } else {
        new_value = "Red";
      }

      if (new_value != last_value) {
        last_value = new_value;
        return new_value;
      } else {
        return {};
      }

#Sensor
  - platform: template
    update_interval: 1s
    name: "IKEA VINDRIKTNING Air Quality"
    icon: mdi:emoticon
    lambda: |-
      static std::string last_value = "";
      std::string new_value;

      if (id(pm2_5).state <= 12.0) {
        new_value = "Excellent";
      } else if (id(pm2_5).state > 12.0 && id(pm2_5).state <= 35.0) {
        new_value = "Good";
      } else if (id(pm2_5).state > 35.0 && id(pm2_5).state <= 55.0) {
        new_value = "Moderate";
      } else if (id(pm2_5).state > 55.0 && id(pm2_5).state <= 150.0) {
        new_value = "Unhealthy for Sensitive Groups";
      } else if (id(pm2_5).state > 150.0 && id(pm2_5).state <= 250.0) {
        new_value = "Unhealthy";
      } else if (id(pm2_5).state > 250.0 && id(pm2_5).state <= 350.0) {
        new_value = "Very Unhealthy";
      } else {
        new_value = "Hazardous";
      }

      if (new_value != last_value) {
        last_value = new_value;
        return new_value;
      } else {
        return {};
      }
