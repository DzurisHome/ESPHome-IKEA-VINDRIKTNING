#ESPHome Core
esphome:
  name: air-quality-dzuris-home
  area: Living Room

esp8266:
  board: d1_mini

#Logger
logger:

#WiFi
wifi:
  ssid: #SSID or !secret wifi_ssid
  password: #Password or !secret wifi_password

  manual_ip: #If you don't want set manual IPs, Delete (manual_ip and below that)
    static_ip: #Air Quality Device IP
    gateway: #Router IP
    subnet: #Router Subnet IP

  ap:
    ssid: "Air Quality Dzuriš Home AP"
    password: #Acess Point password or !secret ap_password

captive_portal:

#Web Server
web_server: #If you don't want Web Server, Delete (web_server and below that) 
  port: 80
  auth:
    username: #Username or !secret web_server_username
    password: #Password or !secret web_server_password

#OTA
ota:
  safe_mode: true
  password: #Password or !secret ota_password

#MQTT
mqtt: #If you don't have or want MQTT Broker, Delete (mqtt and below that)
  broker: #Broker or !secret mqtt_broker_ip_address
  username: #Username or !secret mqtt_broker_username
  password: #Password or !secret mqtt_broker_password
  client_id: "Air Quality Dzuriš Home"
  discovery: false #If you chnnge to true Home Assistant don't discovery device only from MQTT Integration
  topic_prefix: "Air Quality Dzuriš Home"

#ESPHome API
api: #If you don't want ESPHome API, Delete (api and below that)
  encryption:
    key: #Key or !secret api_encryption_key

#Home Assistant Time
time: #Home Assistant time, other time or Delete (time and below that)
  - platform: homeassistant
    id: homeassistant_time

#Device Required
uart:
  rx_pin: #ESP8266 Wemos D1 Mini: D2, ESP32 Wemos D1 Mini: GPIO21, XIAO-ESP32-C3: GPIO6, ESP32 C3 Supermini: GPIO8
  baud_rate: 9600

#Device
binary_sensor: #If you don't have or want FAN, Delete (binary_sensor and below that)
  - platform: gpio
    pin:
      number: #ESP8266 Wemos D1 Mini: D4, ESP32 Wemos D1 Mini: GPIO16,	XIAO-ESP32-C3: GPIO9, ESP32 C3 Supermini: GPIO3
      inverted: true
    name: "Air Quality Fan Dzuriš Home"
    entity_category: "diagnostic"

sensor:
  - platform: pm1006
    pm_2_5:
      id: particulate_matter_2_5
      name: "Particulate Matter 2.5µm"

  - platform: adc #If you don't have or want Carbon Monoxide, Delete (platform: adc and below that)
    pin: #ESP8266 Wemos D1 Mini: A0, ESP32 Wemos D1 Mini: GPIO34,	XIAO-ESP32-C3: GPIO2, ESP32 C3 Supermini: GPIO5
    id: carbon_monoxide
    name: "Carbon Monoxide Dzuriš Home"
    icon: mdi:molecule-co
    update_interval: 30s
    unit_of_measurement: "ppm"
    device_class: "carbon_monoxide"
    state_class: "measurement"
    filters:
        - lambda: return (x * 1024/5);

#Diagnostic
  - platform: wifi_signal
    name: "Air Quality Dzuriš Home RSSI"
    update_interval: 1min
    unit_of_measurement: "dBm"
    device_class: "signal_strength"
    state_class: "measurement"
    entity_category: "diagnostic"

  - platform: uptime
    id: uptime_seconds
    name: "Uptime Seconds"
    icon: mdi:clock-time-four-outline
    update_interval: 1min
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_sensor
            state: !lambda |-
              int seconds = round(id(uptime_seconds).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

#Sensor
text_sensor:
  - platform: template
    name: "Air Quality Color Dzuriš Home"
    icon: mdi:led-strip
    update_interval: 30s
    lambda: |-
      if (id(particulate_matter_2_5).state <= 35.0) {
        return {"Green"};
      } else if (id(particulate_matter_2_5).state > 35.0 && id(particulate_matter_2_5).state <= 85.0) {
        return {"Orange"};
      } else {
        return {"Red"};
      }

  - platform: template
    name: "Particulate Matter 2.5µm Air Quality Dzuriš Home"
    icon: mdi:emoticon
    update_interval: 30s
    lambda: |-
      if (id(particulate_matter_2_5).state <= 12.0) {
        return {"Excellent"};
      } else if (id(particulate_matter_2_5).state > 12.0 && id(particulate_matter_2_5).state <= 35.0) {
        return {"Good"};
      } else if (id(particulate_matter_2_5).state > 35.0 && id(particulate_matter_2_5).state <= 55.0) {
        return {"Moderate"};
      } else if (id(particulate_matter_2_5).state > 55.0 && id(particulate_matter_2_5).state <= 150.0) {
        return {"Unhealthy for Sensitive Groups"};
      } else if (id(particulate_matter_2_5).state > 150.0 && id(particulate_matter_2_5).state <= 250.0) {
        return {"Unhealthy"};
      } else if (id(particulate_matter_2_5).state > 250.0 && id(particulate_matter_2_5).state <= 350.0) {
        return {"Very Unhealthy"};
      } else {
        return {"Hazardous"};
      }

  - platform: template #If you don't have or want Carbon Monoxide, Delete (platform: template and below that)
    name: "Carbon Monoxide Air Quality Dzuriš Home"
    icon: mdi:emoticon
    update_interval: 30s
    lambda: |-
      if (id(carbon_monoxide).state <= 50.0) {
        return {"Excellent"};
      } else if (id(carbon_monoxide).state > 50.0 && id(carbon_monoxide).state <= 100.0) {
        return {"Good"};
      } else if (id(carbon_monoxide).state > 100.0 && id(carbon_monoxide).state <= 200.0) {
        return {"Moderate"};
      } else if (id(carbon_monoxide).state > 200.0 && id(carbon_monoxide).state <= 400.0) {
        return {"Unhealthy for Sensitive Groups"};
      } else if (id(carbon_monoxide).state > 400.0 && id(carbon_monoxide).state <= 800.0) {
        return {"Unhealthy"};
      } else {
        return {"Very Unhealthy"};
      }

#Diagnostic
  - platform: template
    id: uptime_sensor
    name: "Air Quality Dzuriš Home Uptime"
    icon: mdi:clock-time-four-outline
    entity_category: "diagnostic"

#Configuration
button:
  - platform: restart
    name: "Air Quality Dzuriš Home Restart"
